-- a1:: Bool
-- a1 = True                   -- Hint  - What type is True

-- a2 = 7 * 6

-- a3 = 99

-- a4 = length [1,2,3]

-- a6 = undefined

-- a7 = if a3 == 99 then 1 else 0

-- a8 = if 2<5 then 'a' else 'b'

-- a5 = 3

-- a9:: Int -> Int
-- a9 x = x `div` 2

-- a10 = a9 a5

-- a11 = 4 > a5 && True

-- ------+-----------------------+-----------------------+--------------------+

-- Prec-  |  Left associative     | Non-associative       | Right associative  |

-- edence|  operators            | operators             | operators          |
-- ------|-----------------------|-----------------------|--------------------+
-- 9     | !!              .     |                       |                    |
-- ------|-----------------------|-----------------------|--------------------+
-- 8     |                       |                       | ^    ^^    **      |
-- ------|-----------------------|-----------------------|--------------------+
-- 7     | *   /  `div`          |                       |                    |
--       | `mod`  `rem`  `quot`  |                       |                    |
-- ------|-----------------------|-----------------------|--------------------+
-- 6     | +   -                 |                       |                    |
-- ------|-----------------------|-----------------------|--------------------+
-- 5     |                       |                       | :  ++              |
-- ------|-----------------------|-------------------- --|--------------------+
-- 4     |                       | ==  /=   <   <=   >   |                    |
--       |                       | >=  `elem`  `notElem` |                    |
-- ------|-----------------------|-----------------------|--------------------+
-- 3     |                       |                       | &&                 |
-- ------|-----------------------|-----------------------|--------------------+
-- 2     |                       |                       | ||                 |
-- ------|-----------------------|-----------------------|--------------------+
-- 1     | >>   >>=              |                       |                    |
-- ------|-----------------------|-----------------------|--------------------+
-- 0     |                       |                       | $    $!   `seq`    |
-- ------|-----------------------|-----------------------|--------------------+


-- For example I have done "a2" below

a1 = 3 + 5 * 5
a2 = (3 + (5 * 5))

------------------------------
b1 = 5 < 2 + 4
b2 = 5 < (2+4)

------------------------------
c1 = length [2] + 5 * 2
c2 = length [2] + (5 * 2)

-----------------------------
d1 = 5 ^ id 3
d2 = 5 ^ 3

-----------------------------
e1 = [2,3,4] !! 2 ^ 5
e2 = ([2,3,4] !! 2) ^ 5

-----------------------------
f1 = 3 > 4  &&  2 == 5 * 3
f2 = (3 > 4) && 2 == (5 * 3)

------------------------------
g1 = 3 `elem` [3,4,5]
g2 = 3 `elem` [3,4,5]


---------------------------------------------------------------------
-- if when you type "main" you get True, then you have succeeded

checkAll = all true [a1==a2, b1==b2,c1==c2,d1==d2,e1==e2,f1==f2,g1==g2]
  where true x = x
